/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.meteoinfo.legend;

import org.meteoinfo.layer.FrmLayerProperty;
import org.meteoinfo.shape.ShapeTypes;
import java.awt.Color;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import org.meteoinfo.global.util.BigDecimalUtil;

/**
 *
 * @author yaqiang
 */
public class FrmLegendBreaks extends javax.swing.JDialog {

    private java.awt.Dialog _parent;
    private LegendScheme _legendScheme = null;
    private double _minContourValue, _maxContourValue, _interval;
    private boolean _isUniqueValue = false;

    /**
     * Constructor
     *
     * @param parent Parent dialog
     * @param modal Modal
     * @param isUniqueValue If is unique value legend scheme
     */
    public FrmLegendBreaks(java.awt.Dialog parent, boolean modal, boolean isUniqueValue) {
        super(parent, modal);
        initComponents();

        _parent = parent;
        _isUniqueValue = isUniqueValue;
    }

    private void initialize() {
        this.jLabel_Min.setText("Min: " + String.format("%1$E", _legendScheme.getMinValue()));
        this.jLabel_Max.setText("Max: " + String.format("%1$E", _legendScheme.getMaxValue()));
        int bnum = _legendScheme.getBreakNum();
        if (bnum > 2) {
            ColorBreak aCB = _legendScheme.getLegendBreaks().get(0);
            _minContourValue = Double.parseDouble(aCB.getEndValue().toString());
            if (_legendScheme.getHasNoData()) {
                aCB = _legendScheme.getLegendBreaks().get(bnum - 2);
                _maxContourValue = Double.parseDouble(aCB.getStartValue().toString());
                _interval = BigDecimalUtil.div((BigDecimalUtil.sub(_maxContourValue, _minContourValue)), (bnum - 3));
            } else {
                aCB = _legendScheme.getLegendBreaks().get(bnum - 1);
                _maxContourValue = Double.parseDouble(aCB.getStartValue().toString());
                switch (_legendScheme.getShapeType()) {
                    case Polyline:
                    case PolylineZ:
                        _interval = BigDecimalUtil.div((BigDecimalUtil.sub(_maxContourValue, _minContourValue)), (bnum - 1));
                        break;
                    default:
                        _interval = BigDecimalUtil.div((BigDecimalUtil.sub(_maxContourValue, _minContourValue)), (bnum - 2));
                        break;
                }
            }

            this.jTextField_StartValue.setText(String.valueOf(_minContourValue));
            this.jTextField_EndValue.setText(String.valueOf(_maxContourValue));
            this.jTextField_Interval.setText(String.valueOf(_interval));
        }
        this.jRadioButton_RainbowColors.setSelected(true);
        this.jLabel_StartColor.setEnabled(false);
        this.jLabel_EndColor.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel_Min = new javax.swing.JLabel();
        jLabel_Max = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_StartValue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField_EndValue = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_Interval = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton_RainbowColors = new javax.swing.JRadioButton();
        jRadioButton_ShadedColors = new javax.swing.JRadioButton();
        jLabel_StartColor = new javax.swing.JLabel();
        jLabel_EndColor = new javax.swing.JLabel();
        jButton_NewLegend = new javax.swing.JButton();
        jButton_NewColors = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel_Min.setText("Min:");

        jLabel_Max.setText("Max:");

        jLabel1.setText("Contouring:");

        jTextField_StartValue.setPreferredSize(new java.awt.Dimension(89, 24));

        jLabel2.setText("to:");

        jTextField_EndValue.setPreferredSize(new java.awt.Dimension(89, 24));

        jLabel3.setText("Interval:");

        jTextField_Interval.setPreferredSize(new java.awt.Dimension(89, 24));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Color Set"));

        buttonGroup1.add(jRadioButton_RainbowColors);
        jRadioButton_RainbowColors.setText("Rainbow Colors");
        jRadioButton_RainbowColors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_RainbowColorsActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton_ShadedColors);
        jRadioButton_ShadedColors.setText("Shaded Colors");
        jRadioButton_ShadedColors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_ShadedColorsActionPerformed(evt);
            }
        });

        jLabel_StartColor.setBackground(new java.awt.Color(255, 255, 204));
        jLabel_StartColor.setText("Start Color");
        jLabel_StartColor.setOpaque(true);
        jLabel_StartColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_StartColorMouseClicked(evt);
            }
        });

        jLabel_EndColor.setBackground(new java.awt.Color(255, 0, 51));
        jLabel_EndColor.setText("End Color");
        jLabel_EndColor.setOpaque(true);
        jLabel_EndColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_EndColorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton_RainbowColors)
                    .addComponent(jRadioButton_ShadedColors))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_StartColor)
                    .addComponent(jLabel_EndColor))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_RainbowColors)
                    .addComponent(jLabel_StartColor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_ShadedColors)
                    .addComponent(jLabel_EndColor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton_NewLegend.setText("New Legend");
        jButton_NewLegend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NewLegendActionPerformed(evt);
            }
        });

        jButton_NewColors.setText("New Colors");
        jButton_NewColors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NewColorsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_StartValue, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_Interval, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel_Min))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_EndValue, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel_Max)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jButton_NewLegend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_NewColors)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Max)
                    .addComponent(jLabel_Min))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_StartValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_EndValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Interval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_NewLegend)
                    .addComponent(jButton_NewColors))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.initialize();
    }//GEN-LAST:event_formWindowOpened

    private void jRadioButton_RainbowColorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_RainbowColorsActionPerformed
        // TODO add your handling code here:
        if (this.jRadioButton_RainbowColors.isSelected()) {
            this.jLabel_StartColor.setEnabled(false);
            this.jLabel_EndColor.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton_RainbowColorsActionPerformed

    private void jRadioButton_ShadedColorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_ShadedColorsActionPerformed
        // TODO add your handling code here:
        if (this.jRadioButton_ShadedColors.isSelected()) {
            this.jLabel_StartColor.setEnabled(true);
            this.jLabel_EndColor.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton_ShadedColorsActionPerformed

    private void jLabel_StartColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_StartColorMouseClicked
        // TODO add your handling code here:
        Color aColor = JColorChooser.showDialog(rootPane, null, this.jLabel_StartColor.getBackground());
        this.jLabel_StartColor.setBackground(aColor);
    }//GEN-LAST:event_jLabel_StartColorMouseClicked

    private void jLabel_EndColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_EndColorMouseClicked
        // TODO add your handling code here:
        Color aColor = JColorChooser.showDialog(rootPane, null, this.jLabel_EndColor.getBackground());
        this.jLabel_EndColor.setBackground(aColor);
    }//GEN-LAST:event_jLabel_EndColorMouseClicked

    private void jButton_NewLegendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NewLegendActionPerformed
        // TODO add your handling code here:
        _interval = Double.parseDouble(this.jTextField_Interval.getText());
        _minContourValue = Double.parseDouble(this.jTextField_StartValue.getText());
        _maxContourValue = Double.parseDouble(this.jTextField_EndValue.getText());

        if ((int) ((_maxContourValue - _minContourValue) / _interval) < 2) {
            JOptionPane.showMessageDialog(null, "Please reset the data!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double[] cValues;
        cValues = LegendManage.createContourValuesInterval(_minContourValue, _maxContourValue,
                _interval);

        Color[] colors = createColors(cValues.length + 1);

        LegendScheme aLS;
        if (_isUniqueValue) {
            aLS = LegendManage.createUniqValueLegendScheme(cValues, colors, _legendScheme.getShapeType(),
                    _legendScheme.getMinValue(), _legendScheme.getMaxValue(), _legendScheme.getHasNoData(), _legendScheme.getUndefValue());
        } else {
            aLS = LegendManage.createGraduatedLegendScheme(cValues, colors, _legendScheme.getShapeType(),
                    _legendScheme.getMinValue(), _legendScheme.getMaxValue(), _legendScheme.getHasNoData(),
                    _legendScheme.getUndefValue());
        }
        aLS.setFieldName(_legendScheme.getFieldName());
        setLegendScheme(aLS);

        if (_parent.getClass() == FrmLegendSet.class) {
            ((FrmLegendSet) _parent).setLegendScheme(aLS);
        } else if (_parent.getClass() == FrmLayerProperty.class) {
            ((FrmLayerProperty) _parent).setLegendScheme(aLS);
        }
    }//GEN-LAST:event_jButton_NewLegendActionPerformed

    private void jButton_NewColorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NewColorsActionPerformed
        // TODO add your handling code here:
        int colorNum = _legendScheme.getBreakNum();

        if (_legendScheme.getShapeType() == ShapeTypes.Polyline) {
            colorNum += 1;
        }

        Color[] colors = createColors(colorNum);

        int i;
        for (i = 0; i < _legendScheme.getBreakNum(); i++) {
            _legendScheme.getLegendBreaks().get(i).setColor(colors[i]);
        }

        if (_parent.getClass() == FrmLegendSet.class) {
            ((FrmLegendSet) _parent).setLegendScheme(_legendScheme);
        } else if (_parent.getClass() == FrmLayerProperty.class) {
            ((FrmLayerProperty) _parent).setLegendScheme(_legendScheme);
        }
    }//GEN-LAST:event_jButton_NewColorsActionPerformed

    /**
     * Set legend scheme
     *
     * @param aLS Legend scheme
     */
    public void setLegendScheme(LegendScheme aLS) {
        _legendScheme = (LegendScheme) aLS.clone();
        this.initialize();
    }

    private Color[] createColors(int colorNum) {
        Color[] colors;

        if (this.jRadioButton_RainbowColors.isSelected()) {
            colors = LegendManage.createRainBowColors(colorNum);
        } else {
            colors = LegendManage.createColors(this.jLabel_StartColor.getBackground(), this.jLabel_EndColor.getBackground(),
                    colorNum);
        }

        return colors;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmLegendBreaks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmLegendBreaks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmLegendBreaks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLegendBreaks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmLegendBreaks dialog = new FrmLegendBreaks(new javax.swing.JDialog(), true, false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton_NewColors;
    private javax.swing.JButton jButton_NewLegend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_EndColor;
    private javax.swing.JLabel jLabel_Max;
    private javax.swing.JLabel jLabel_Min;
    private javax.swing.JLabel jLabel_StartColor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton_RainbowColors;
    private javax.swing.JRadioButton jRadioButton_ShadedColors;
    private javax.swing.JTextField jTextField_EndValue;
    private javax.swing.JTextField jTextField_Interval;
    private javax.swing.JTextField jTextField_StartValue;
    // End of variables declaration//GEN-END:variables
}
